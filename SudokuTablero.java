/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sudokucdrs;

import java.awt.Dimension;
import javafx.scene.paint.Color;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import sudokucdrs.Sku;

/**
 * @author Constanza Ybarra Trapote
 * @author Daniel Alejandro Nieto Barreto
 * @author Rodrigo Plauchú Rodríguez
 * @author Santiago Fernandez Gutiérrez Zamora
 */
public class SudokuTablero extends javax.swing.JFrame {



    /**
     * Creates new form SudokuTablero
     */
    public SudokuTablero() {
        initComponents();
        for (int i = 0; i < 11; i++) {
            for (int j = 0; j < 11; j++) {
                if (i == 3 || j == 7 || i == 7 || j == 3) {
                    Tablero.setValueAt(-1, i, j);
                }
                else
                    Tablero.setValueAt(0, i, j);
            }
        }
        Tablero.setShowHorizontalLines(true);
        Tablero.setShowVerticalLines(true);
        DefaultTableCellRenderer tcr = new DefaultTableCellRenderer();
        tcr.setAlignmentY(SwingConstants.CENTER);
        for(int i=0;i<11;i++){
            Tablero.getColumnModel().getColumn(i).setCellRenderer(tcr);
        }
        JOptionPane.showMessageDialog(null, "Solo se pueden ingresar números (enteros y sin punto decimal).\nRecuerde que para que los dígitos sean registrados tiene que oprimir \"Enter\" en su teclado, después de escribir alguno en la tabla.");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jColorChooser1 = new javax.swing.JColorChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tablero = new auxi.DTable();//javax.swing.JTable();
        Resolverbt = new javax.swing.JButton();
        LimpiarBT = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(51, 255, 0));

        jScrollPane1.setPreferredSize(new java.awt.Dimension(600, 600));

        Tablero.setAutoCreateRowSorter(true);
        Tablero.setBackground(new java.awt.Color(255, 153, 153));
        Tablero.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        Tablero.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                { new Integer(0),  new Integer(0),  new Integer(0), null,  new Integer(0),  new Integer(0),  new Integer(0), null,  new Integer(0),  new Integer(0),  new Integer(0)},
                { new Integer(0),  new Integer(0),  new Integer(0), null,  new Integer(0),  new Integer(0),  new Integer(0), null,  new Integer(0),  new Integer(0),  new Integer(0)},
                { new Integer(0),  new Integer(0),  new Integer(0), null,  new Integer(0),  new Integer(0),  new Integer(0), null,  new Integer(0),  new Integer(0),  new Integer(0)},
                {null, null, null, null, null, null, null, null, null, null, null},
                { new Integer(0),  new Integer(0),  new Integer(0), null,  new Integer(0),  new Integer(0),  new Integer(0), null,  new Integer(0),  new Integer(0),  new Integer(0)},
                { new Integer(0),  new Integer(0),  new Integer(0), null,  new Integer(0),  new Integer(0),  new Integer(0), null,  new Integer(0),  new Integer(0),  new Integer(0)},
                { new Integer(0),  new Integer(0),  new Integer(0), null,  new Integer(0),  new Integer(0),  new Integer(0), null,  new Integer(0),  new Integer(0),  new Integer(0)},
                {null, null, null, null, null, null, null, null, null, null, null},
                { new Integer(0),  new Integer(0),  new Integer(0), null,  new Integer(0),  new Integer(0),  new Integer(0), null,  new Integer(0),  new Integer(0),  new Integer(0)},
                { new Integer(0),  new Integer(0),  new Integer(0), null,  new Integer(0),  new Integer(0),  new Integer(0), null,  new Integer(0),  new Integer(0),  new Integer(0)},
                { new Integer(0),  new Integer(0),  new Integer(0), null,  new Integer(0),  new Integer(0),  new Integer(0), null,  new Integer(0),  new Integer(0), null}
            },
            new String [] {
                "C1", "C2", "C3", "Nula", "C4", "C5", "C6", "Nula", "C7", "C8", "C9"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                true, true, true, false, true, true, true, false, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Tablero.setAlignmentX(1.5F);
        Tablero.setAutoscrolls(false);
        Tablero.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Tablero.setFillsViewportHeight(true);
        Tablero.setName(""); // NOI18N
        Tablero.setPreferredSize(new java.awt.Dimension(150, 190));
        Tablero.setRowHeight(30);
        Tablero.setRowMargin(0);
        jScrollPane1.setViewportView(Tablero);
        if (Tablero.getColumnModel().getColumnCount() > 0) {
            Tablero.getColumnModel().getColumn(0).setResizable(false);
            Tablero.getColumnModel().getColumn(0).setPreferredWidth(60);
            Tablero.getColumnModel().getColumn(1).setResizable(false);
            Tablero.getColumnModel().getColumn(1).setPreferredWidth(60);
            Tablero.getColumnModel().getColumn(2).setResizable(false);
            Tablero.getColumnModel().getColumn(2).setPreferredWidth(60);
            Tablero.getColumnModel().getColumn(3).setResizable(false);
            Tablero.getColumnModel().getColumn(3).setPreferredWidth(60);
            Tablero.getColumnModel().getColumn(4).setResizable(false);
            Tablero.getColumnModel().getColumn(4).setPreferredWidth(60);
            Tablero.getColumnModel().getColumn(5).setResizable(false);
            Tablero.getColumnModel().getColumn(5).setPreferredWidth(60);
            Tablero.getColumnModel().getColumn(6).setResizable(false);
            Tablero.getColumnModel().getColumn(6).setPreferredWidth(60);
            Tablero.getColumnModel().getColumn(7).setResizable(false);
            Tablero.getColumnModel().getColumn(7).setPreferredWidth(60);
            Tablero.getColumnModel().getColumn(8).setResizable(false);
            Tablero.getColumnModel().getColumn(8).setPreferredWidth(60);
            Tablero.getColumnModel().getColumn(9).setResizable(false);
            Tablero.getColumnModel().getColumn(9).setPreferredWidth(60);
            Tablero.getColumnModel().getColumn(10).setResizable(false);
            Tablero.getColumnModel().getColumn(10).setPreferredWidth(60);
        }

        Resolverbt.setBackground(new java.awt.Color(255, 0, 51));
        Resolverbt.setForeground(new java.awt.Color(255, 255, 255));
        Resolverbt.setText("Resolver");
        Resolverbt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResolverbtActionPerformed(evt);
            }
        });

        LimpiarBT.setBackground(new java.awt.Color(0, 102, 102));
        LimpiarBT.setForeground(new java.awt.Color(255, 255, 255));
        LimpiarBT.setText("Limpiar");
        LimpiarBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LimpiarBTActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel3.setText(" Sudoku >_<");

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel1.setText("Solo se pueden ingresar números (enteros y sin punto decimal).");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel2.setText("Recuerde que para que los dígitos sean registrados tiene que oprimir \"Enter\" en su teclado, después de escribir alguno en la tabla.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(LimpiarBT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Resolverbt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(49, 49, 49)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 716, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(225, 225, 225)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(210, 210, 210)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 33, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(338, 338, 338)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addGap(1, 1, 1)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addComponent(Resolverbt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LimpiarBT)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void LimpiarBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LimpiarBTActionPerformed
        for (int i = 0; i < 11; i++) {
            for (int j = 0; j < 11; j++) {
                if (i == 3 || j == 7 || i == 7 || j == 3) {
                    Tablero.setValueAt(-1, i, j);
                }
                else
                    Tablero.setValueAt(0, i, j);
            }
        }
    }//GEN-LAST:event_LimpiarBTActionPerformed

    private void ResolverbtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResolverbtActionPerformed
        Sku MiSudoku=new Sku();
        int i=0,j=0;
        boolean resp=true;
        while(i < 11&&resp) {
            j=0;
            while(j < 11&&resp) {
                if (i != 3 && j != 7 && i != 7 && j != 3) {
                    int dig=(int)Tablero.getValueAt(i, j);
                    if(dig!=0){
                        int[] posVer=traducePos(i,j);
                        resp=MiSudoku.alta(dig, posVer[0], posVer[1]);
                        if(!resp){
                            int msg1=posVer[0]+1,msg2=posVer[1]+1;
                            JOptionPane.showMessageDialog(null, "Los datos ingresados son erróneos en la posicion ["+msg1+"]["+msg2+"]");
                        }
                    }
                }
                j++;
            }
            i++;
        }
        
        if(resp){
            MiSudoku.resuelve();
            int[][] resul=MiSudoku.getSudoku();
            i=0;
            while(i < 11) {
                j=0;
                while(j < 11) {
                    if (i != 3 && j != 7 && i != 7 && j != 3) {
                        int[] posVer=traducePos(i,j);
                        int val=resul[ posVer[0] ][ posVer[1] ];
                        Tablero.setValueAt(val, i, j);
                    }
                    j++;
                }
                i++;
            }
        }
       
    }//GEN-LAST:event_ResolverbtActionPerformed

    private int[] traducePos(int r,int c){
        int[] RenCol=new int[2];
        if(r>3&&r<7)
            r=r-1;
        if(r>7)
            r=r-2;
        
        if(c>3&&c<7)
            c=c-1;
        if(c>7)
            c=c-2;
        RenCol[0]=r;
        RenCol[1]=c;
        return RenCol;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SudokuTablero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SudokuTablero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SudokuTablero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SudokuTablero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SudokuTablero().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton LimpiarBT;
    private javax.swing.JButton Resolverbt;
    private javax.swing.JTable Tablero;
    private javax.swing.JColorChooser jColorChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
